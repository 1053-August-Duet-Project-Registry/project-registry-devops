# This template is expects exactly ONE Dockerfile in the microservice repo
# This template utilizes an external dependency called mvn-version to extract
# the version of the Maven pom.xml file, which it expects to be in the main
# directory for the microservice, with a foldername that is the same as the
# image name that will be used for the docker image

parameters:

  # project configuration parameters:
- name: imageName                   # <-- e.g., project-registry-gateway
  type: string
- name: containerRepo               # <-- e.g., myproject.azurecr.io, myDockerHub
  type: string
- name: containerServiceConnection  # <-- name of the service connection associated
  type: string                      #     with the above repo
- name: containerUrl                # <-- URL to the associated repo
  type: string
- name: version                     # <-- the version is dynamically set using mvn-version
  type: string                      #     so there is no need to pass this parameter into
  default: undefined                #     the template; the default value could be any string

  # external access parameters:
- name: discordChannel
  type: string
- name: discordKey
  type: string

steps:

- script: |
    MVN_VERSION_DOWNLOAD='https://github.com/emcrisostomo/mvn-version/archive/refs/tags/1.2.1.tar.gz'
    mkdir mvn-version && 
    cd mvn-version &&
    mkdir 1.2.1 &&
    curl -L $MVN_VERSION_DOWNLOAD |
      tee 1.2.1.tar.gz |
      tar zx -C 1.2.1
  workingDirectory: $(Build.SourcesDirectory)
  displayName: download mvn-version

- script: |
    sudo apt-get install zsh -y &&
    sudo apt-get install xmlstarlet -y &&
    pwd && ls &&
    sudo ./configure &&
    sudo make &&
    sudo make install
  workingDirectory: $(Build.SourcesDirectory)/mvn-version/1.2.1/mvn-version-1.2.1
  displayName: Install mvn-version --> Task
    
- script: |
    VERSION=$(mvn-version .) &&
    echo extracted $VERSION &&
    echo "##vso[task.setvariable variable=version]$VERSION"
  workingDirectory: $(Build.SourcesDirectory)/${{ parameters.imageName }} 
  displayName: Extract microservice version from pom.xml file --> Task

- task: Docker@2
  inputs:
    containerRegistry: ${{ parameters.containerServiceConnection }}
    repository: '${{ parameters.containerRepo }}/${{ parameters.imageName }}'
    command: 'buildAndPush'
    Dockerfile: '**/Dockerfile'
    tags: '$(version)'
  displayName: Dockerize ${{ parameters.imageName }} and push --> Task

- task: ado-discord-webhook@1
  condition: always()
  inputs:
    channelId: ${{ parameters.discordChannel }}
    webhookKey: ${{ parameters.discordKey }}
    name: '$(System.TeamProject) - Docker'
    avatar: 'https://external-content.duckduckgo.com/iu/?u=https%3A%2F%2Fcdn3.iconfinder.com%2Fdata%2Ficons%2Flogos-and-brands-adobe%2F512%2F97_Docker-512.png&f=1&nofb=1'
    messageType: 'content'
    content: |
      **__Dockerization Report__**
      **Status:** $(Agent.JobStatus)
      **Branch:** $(Build.SourceBranch)
      **Trigger:** $(Build.Reason)
      **Message:** $(Build.SourceVersionMessage)
      **Image:** ${{ parameters.imageName }}:$(version)
      **Container Repo:** <${{ parameters.containerUrl }}>
      **Logs:** <$(System.CollectionUri)$(System.TeamProject)/_build/results?buildId=$(Build.BuildId)&view=logs>
      **Repo:** <$(Build.Repository.Uri)/tree/$(Build.SourceBranchName)>
  displayName: Notification --> Task
