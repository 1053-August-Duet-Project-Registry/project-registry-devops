# This template is expects exactly ONE Dockerfile in the microservice repo
# This template currently relies on an external variable called 'version' which
# this template will overwrite, but the variable must be delcared outside the template

parameters:

  # project configuration parameters:
- name: imageName                   # <-- e.g., project-registry-gateway
  type: string
- name: containerRepo               # <-- e.g., myproject.azurecr.io, myDockerHub
  type: string
- name: containerServiceConnection  # <-- name of the service connection associated
  type: string                      #     with the above repo
- name: containerUrl                # <-- URL to the associated repo
  type: string
- name: mvnVersionDir               # <-- the path to mvn-version
  type: string
- name: version
  type: string
  default: undefined

  # external access parameters:
- name: discordChannel
  type: string
- name: discordKey
  type: string

steps:
- script: |
    sudo apt-get install zsh -y
    sudo apt-get install xmlstarlet -y
    sudo bash autogen.sh
    sudo ./configure
    sudo make
    sudo make install
  workingDirectory: ${{ parameters.mvnVersionDir }}
  displayName: Install mvn-version --> Task
    
- script: |
    VERSION=$(mvn-version .)
    echo extracted $VERSION
    echo "##vso[task.setvariable variable=version]$VERSION"
  workingDirectory: $(Build.SourcesDirectory)/${{ parameters.imageName }} 
  displayName: Extract microservice version from pom.xml file --> Task

- task: Docker@2
  inputs:
    containerRegistry: ${{ parameters.containerServiceConnection }}
    repository: '${{ parameters.containerRepo }}/${{ parameters.imageName }}'
    command: 'buildAndPush'
    Dockerfile: '**/Dockerfile'
    tags: '$(version)'
  displayName: Dockerize ${{ parameters.imageName }} and push --> Task

- task: ado-discord-webhook@1
  inputs:
    channelId: ${{ parameters.discordChannel }}
    webhookKey: ${{ parameters.discordKey }}
    name: '$(System.TeamProject) - Docker'
    avatar: 'https://external-content.duckduckgo.com/iu/?u=https%3A%2F%2Fcdn3.iconfinder.com%2Fdata%2Ficons%2Flogos-and-brands-adobe%2F512%2F97_Docker-512.png&f=1&nofb=1'
    messageType: 'content'
    content: |
      **__Dockerization Report__**
      **Status:** $(Agent.JobStatus)
      **Branch:** $(Build.SourceBranch)
      **Trigger:** $(Build.Reason)
      **Message:** $(Build.SourceVersionMessage)
      **Image:** ${{ parameters.imageName }}:$(version)
      **Container Repo:** <${{ parameters.containerUrl }}>
      **Logs:** <$(System.CollectionUri)$(System.TeamProject)/_build/results?buildId=$(Build.BuildId)&view=logs>
      **Repo:** <$(Build.Repository.Uri)/tree/$(Build.SourceBranchName)>
  displayName: Notification --> Task
