# This template is specifically for conducting static analysis of JDK 11 Maven builds using SonarCloud

parameters:

  # project configuration parameters:
- name: microservice  # <-- e.g., gateway, account-microservice
  type: string
- name: workDir       # <-- will need to override with multi-repo subdirectory
  type: string        #     e.g., ./project-registry-tracking-microservice/)
- name: coveragePath  # <-- may override the coverage path if desired
  type: string
  default: ''

  # external access parameters:
- name: sonarKeyPrefix
  type: string
- name: sonarNamePrefix
  type: string
- name: sonarOrg
  type: string
- name: sonarUrlPrefix
  type: string
- name: discordChannel
  type: string
- name: discordKey
  type: string

steps:
- task: SonarCloudPrepare@1 # <-- See external requirements note above
  inputs:
    SonarCloud: 'SonarCloud'
    organization: ${{ parameters.sonarOrg }}
    scannerMode: 'Other'
    extraProperties: |
      sonar.projectKey=${{ parameters.sonarKeyPrefix }}${{ parameters.microservice }}
      sonar.projectName=${{ parameters.sonarNamePrefix }}${{ parameters.microservice }}
  displayName: Prepare Analysis for ${{ parameters.microservice }} --> Task

- task: 'Maven@3'
  inputs:
    mavenPomFile: ${{ parameters.workDir }}pom.xml
    publishJUnitresults: true
    testResultsFiles: '**/surefire-reports/TEST-*.xml'
    codeCoverageToolOption: 'JaCoCo'
    codeCoverageClassFilesDirectories: ${{ parameters.coveragePath }}
    javaHomeOption: 'JDKVersion'
    jdkVersionOption: '1.11'
    mavenVersionOption: 'Default'
    mavenOptions: '-Xmx3072m'
    mavenAuthenticateFeed: false
    effectivePomSkip: false
    sonarQubeRunAnalysis: true
    sqMavenPluginVersionChoice: 'latest'
  displayName: Build/Analyze ${{ parameters.microservice }} --> Task

- task: SonarCloudPublish@1
  condition: always()
  inputs:
    pollingTimeoutSec: '300'
  displayName: Publish Analysis of ${{ parameters.microservice }} --> Task

- task: 'ado-discord-webhook@1' # <-- See external requirements note above
  condition: and(always(), ne(variables['Build.Reason'],'PullRequest'))
  inputs:
    channelId: ${{ parameters.discordChannel }}
    webhookKey: ${{ parameters.discordKey }}
    name: $(System.TeamProject)
    avatar: 'https://external-content.duckduckgo.com/iu/?u=https%3A%2F%2Ftse1.mm.bing.net%2Fth%3Fid%3DOIP.0e667l6wb2NSrxUaSJLkiwHaHa%26pid%3DApi&f=1'
    messageType: 'content'
    content: | 
      **__Analysis Report__**
      **Status:** $(Agent.JobStatus)
      **Branch:** $(Build.SourceBranch)
      **Trigger:** $(Build.Reason)
      **Message:** $(Build.SourceVersionMessage)
      **Report:** <${{ parameters.sonarUrlPrefix }}$(Build.SourceBranch)&id=${{ parameters.sonarKeyPrefix }}${{ parameters.microservice }}>
      **Logs:** <$(System.CollectionUri)$(System.TeamProject)/_build/results?buildId=$(Build.BuildId)&view=logs>
      **Repo:** <$(Build.Repository.Uri)/$(Build.SourceBranchName)>

- task: 'ado-discord-webhook@1' # <-- See external requirements note above
  condition: and(always(), eq(variables['Build.Reason'],'PullRequest'))
  inputs:
    channelId: ${{ parameters.discordChannel }}
    webhookKey: ${{ parameters.discordKey }}
    name: $(System.TeamProject) - PR
    avatar: 'https://external-content.duckduckgo.com/iu/?u=https%3A%2F%2Ftse3.mm.bing.net%2Fth%3Fid%3DOIP.t57fZPkb6fBVhHUXII8DSAHaHa%26pid%3DApi&f=1'
    messageType: 'content'
    content: | 
      **__Analysis Report__**
      **Status:** $(Agent.JobStatus)
      **Report:** <${{ parameters.sonarUrlPrefix }}$(Build.SourceBranch)&id=${{ parameters.sonarKeyPrefix }}${{ parameters.microservice }}>
      **Logs:** <$(System.CollectionUri)$(System.TeamProject)/_build/results?buildId=$(Build.BuildId)&view=logs>
      **PR-Source-URI:** <$(System.PullRequest.SourceRepositoryURI)>
      **PR-Source-Branch:** $(System.PullRequest.SourceBranch)
      **PR-Target-Branch:** $(System.PullRequest.TargetBranch)
  displayName: Notification --> Task
