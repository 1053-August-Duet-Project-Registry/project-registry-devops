parameters:
- name: microservice
  type: string
- name: coveragePath
  type: string
  default: ''
- name: workDir
  type: string
  default: ''
- name: maven
  type: boolean
  default: true
- name: angular
  type: boolean
  default: false
- name: sonarOrg
  type: string
- name: sonarKey
  type: string
- name: sonarName
  type: string
- name: projectName
  type: string
- name: projectOrg
  type: string
- name: sonarUrlPrefix
  type: string
- name: gitUrlPrefix
  type: string
- name: discordId
  type: string
- name: discordKey
  type: string

steps:
- task: SonarCloudPrepare@1
  enabled: ${{ parameters.angular }}
  inputs:
    SonarCloud: 'SonarCloud'
    organization: ${{ parameters.sonarOrg }}
    scannerMode: 'CLI'
    configMode: 'manual'
    cliProjectKey: ${{ parameters.sonarKey }}
    cliSources: '.'
  displayName: Prepare Analysis for ${{ parameters.microservice }} --> Task
      
- task: Npm@1
  enabled: ${{ parameters.angular }}
  inputs:
    command: 'install'
    workingDir: ${{ parameters.workDir }}
  displayName: Install dependencies for ${{ parameters.microservice }} --> Task

- task: AngularCLI@1
  enabled: ${{ parameters.angular }}
  inputs:
    command: 'build'
    project: ${{ parameters.workDir }}
    prod: false
    DisableAnalytics: true
  displayName: Build ${{ parameters.microservice }} --> Task

- task: SonarCloudAnalyze@1
  enabled: ${{ parameters.angular }}
  displayName: Analyze ${{ parameters.microservice }} --> Task

- task: SonarCloudPrepare@1
  enabled: ${{ parameters.maven }}
  inputs:
    SonarCloud: 'SonarCloud'
    organization: ${{ parameters.sonarOrg }}
    scannerMode: 'Other'
    extraProperties: 
      sonar.projectKey=${{ parameters.sonarKey }}
      sonar.projectName=${{ parameters.sonarName }}
  displayName: Prepare Analysis for ${{ parameters.microservice }} --> Task

- task: 'Maven@3'
  enabled: ${{ parameters.maven }}
  inputs:
    mavenPomFile: ./pom.xml
    publishJUnitresults: true
    testResultsFiles: '**/surefire-reports/TEST-*.xml'
    codeCoverageToolOption: 'JaCoCo'
    codeCoverageClassFilesDirectories: ${{ parameters.workDir }}**
    javaHomeOption: 'JDKVersion'
    jdkVersionOption: '1.11'
    mavenVersionOption: 'Default'
    mavenOptions: '-Xmx3072m'
    mavenAuthenticateFeed: false
    effectivePomSkip: false
    sonarQubeRunAnalysis: true
    sqMavenPluginVersionChoice: 'latest'
  displayName: Build/Analyze ${{ parameters.microservice }} --> Task

- task: SonarCloudPublish@1
  condition: always()
  inputs:
    pollingTimeoutSec: '300'
  displayName: Publish Analysis of ${{ parameters.microservice }} --> Task

- script: |
          echo __**Team 1 P3**__  Analysis Report
          echo **Build Logs:** https://dev.azure.com/${{ parameters.projectOrg }}/${{ parameters.projectName }}/_build/results?buildId=$(Build.BuildId)&view=logs
          echo **Analysis Report:** ${{ parameters.sonarUrlPrefix }}${{ parameters.sonarKey }}
          echo **Repo:** ${{ parameters.gitUrlPrefix }}${{ parameters.microservice }}
          echo **Branch:** $(Build.SourceBranch)
          echo **Trigger:** $(Build.Reason)
          echo **Status:** $(Agent.JobStatus)
  condition: always()
  displayName: string check

- task: 'ado-discord-webhook@1'
  condition: always()
  inputs:
    channelId: ${{ parameters.discordId }}
    webhookKey: ${{ parameters.discordKey }}
    name: 'Project Registry Analysis'
    messageType: 'content'
    content: | 
          __**Team 1 P3**__  Analysis Report
          **Build Logs:** https://dev.azure.com/${{ parameters.projectOrg }}/${{ parameters.projectName }}/_build/results?buildId=$(Build.BuildId)&view=logs
          **Analysis Report:** ${{ parameters.sonarUrlPrefix }}${{ parameters.sonarKey }}
          **Repo:** ${{ parameters.gitUrlPrefix }}${{ parameters.microservice }}
          **Branch:** $(Build.SourceBranch)
          **Trigger:** $(Build.Reason)
          **Status:** $(Agent.JobStatus)
  displayName: Notification --> Task
